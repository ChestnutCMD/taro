from aiogram import Bot
from aiogram.types import Message, FSInputFile, CallbackQuery, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from database.models import User, Cart
from database.requests import add_user, get_user, get_carts, debiting_token, get_user_email, add_user_email
from keyboards.reply import reply_keyboard
from keyboards.inline import inline_markup
from utils.gpt import request_gpt
from utils.utils import choice_cart, choice_tree_carts, image_join
from utils.yookassa import create


async def register_user(message: Message):
    """ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è """
    telegram_id: int = message.from_user.id
    first_name: str = message.from_user.first_name
    user: User = await get_user(telegram_id)
    if user is None:
        await add_user(first_name, telegram_id)
    await message.answer(text=f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!\n–ú–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç üîÆ', reply_markup=reply_keyboard)
    await message.delete()


async def add_email(message: Message):
    """ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ—á—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è """
    await add_user_email(message.from_user.id, message.text)
    await message.answer('–í–∞—à–∞ –ø–æ—á—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ ‚úÖ')


async def get_balance(message: Message):
    """ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å """
    user_id: int = message.from_user.id
    user: User = await get_user(user_id)
    await message.answer(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {user.token} token', reply_markup=inline_markup)
    await message.delete()


async def buy_token(message: Message | CallbackQuery):
    """ –ü–æ–∫—É–ø–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤ """
    email = await get_user_email(message.from_user.id)
    if email is None:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π Email. –≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–æ–≤ –æ –ø–æ–∫—É–ø–∫–µ üí≥')
    else:
        user: User = await get_user(message.chat.id if isinstance(message, Message) else message.message.chat.id)
        url_100 = create(amount='100.00', message=message, user=user)
        url_200 = create(amount='200.00', message=message, user=user)
        url_500 = create(amount='500.00', message=message, user=user)

        builder = InlineKeyboardBuilder()
        builder.add(InlineKeyboardButton(text='10 —Ç–æ–∫–µ–Ω–æ–≤', url=url_100))
        builder.add(InlineKeyboardButton(text='20 —Ç–æ–∫–µ–Ω–æ–≤', url=url_200))
        builder.add(InlineKeyboardButton(text='50 —Ç–æ–∫–µ–Ω–æ–≤', url=url_500))

        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ', reply_markup=builder.as_markup()) \
            if isinstance(message, Message) \
            else await message.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ', reply_markup=builder.as_markup())


async def random_cart(message: Message, bot: Bot):
    """ –ö–∞—Ä—Ç–∞ –¥–Ω—è. –í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É"""
    cart_id: int = choice_cart()
    await bot.send_photo(chat_id=message.chat.id, photo=FSInputFile(f'./Images/Carts/{cart_id}.jpg'))
    cart = await get_carts(cart_id)
    await message.answer(f'{cart.name}\n{cart.description}')
    await message.delete()


async def prediction(message: Message, bot: Bot):
    """ –í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ 3 –∫–∞—Ä—Ç—ã """
    chat_id: int = message.chat.id
    carts = choice_tree_carts()
    user = await get_user(chat_id)
    if user.token > 0:
        photo_1 = f'./Images/Carts/{carts[0]}.jpg'
        photo_2 = f'./Images/Carts/{carts[1]}.jpg'
        photo_3 = f'./Images/Carts/{carts[2]}.jpg'
        image = image_join(photo_1, photo_2, photo_3, name=str(chat_id))
        await bot.send_photo(chat_id=message.chat.id, photo=FSInputFile(image))

        cart_1: Cart = await get_carts(carts[0])
        cart_2: Cart = await get_carts(carts[1])
        cart_3: Cart = await get_carts(carts[2])
        predict = request_gpt(message.text, cart_1.name, cart_2.name, cart_3.name)
        await message.answer(f'{cart_1.name}, {cart_2.name}, {cart_3.name}.\n{predict}')
        await debiting_token(chat_id)
    else:
        await message.answer(f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –±–∞–ª–∞–Ω—Å.\n–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ '
                             f'1 —Ç–æ–∫–µ–Ω –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ 00:00 üï§', reply_markup=inline_markup)


async def bot_help(message: Message):
    """ –ü–æ–º–æ—â—å """
    await message.answer('–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ üîÆ:\n'
                         '/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º \n'
                         '/cart_of_day - –ö–∞—Ä—Ç–∞ –¥–Ω—è. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç—ã –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –µ–µ –∑–Ω–∞—á–µ–Ω–∏—è.\n'
                         '/help - –ü–æ–º–æ—â—å. –í—ã–≤–æ–¥ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.\n'
                         '/balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å.\n'
                         '/buy_tokens - –ü–æ–∫—É–ø–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤ üí≥. –î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π email –∞–¥—Ä–µ—Å '
                         '(—ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–∞ –æ –ø–æ–∫—É–ø–∫–µ). '
                         '–î–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç —Å–≤–æ–π email –∞–¥—Ä–µ—Å. '
                         '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å.\n'
                         '–ú–æ—è –≥–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è üî• - —ç—Ç–æ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–∞—à–∏ –≤–ø–æ—Ä–æ—Å—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞—Ä—Ç —Ç–∞—Ä–æ '
                         '–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, '
                         '–∏ —è —Å–¥–µ–ª–∞—é –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–ø–∞–≤—à–∏—Ö –∫–∞—Ä—Ç —Ç–∞—Ä–æ. '
                         '–ó–∞ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å —Å–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è 1 —Ç–æ–∫–µ–Ω (1 —Ç–æ–∫–µ–Ω = 10 —Ä—É–±). –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ 3 —Ç–æ–∫–µ–Ω–∞ üü°.'
                         '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 00:00 –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ 1 —Ç–æ–∫–µ–Ω –ø—Ä–∏ –Ω—É–ª–µ–≤–æ–º –±–∞–ª–∞–Ω—Å–µ.'
                         )
