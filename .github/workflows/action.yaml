name: Build and deploy
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Docker build and push
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/taro:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
          echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/taro:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      PAYMENT_TOKEN: ${{ secrets.PAYMENT_TOKEN }}
      PAYMENT_SHOP_ID: ${{ secrets.PAYMENT_SHOP_ID }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render configs
        run: |
          if [ ! -d "deploy" ]; then
            mkdir deploy
          fi
          cat deploy/docker-compose.yaml | envsubst > deploy/tmp.docker-compose.yaml
          mv deploy/tmp.docker-compose.yaml deploy/docker-compose.yaml
          cat deploy/.env | envsubst > deploy/tmp.env
          mv deploy/tmp.env deploy/.env
      - name: copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "deploy/docker-compose.yaml,deploy/.env"
          target: "bot"
          strip_components: 1
      - name: deploy bot
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd bot
            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose up -d && sudo -S docker system prune -a -f